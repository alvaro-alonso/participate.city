import "hashes/sha256/512bitPadded" as sha256
import "hashes/utils/256bitsDirectionHelper" as multiplex

// Merke-Tree inclusion proof for tree depth 3 
def main(field[256] rootDigest, private field[256] leafDigest, private field directionSelector, field[256] pathDigest0) -> (field):
	// private field[256] PathDigest1, private field[256] PathDigest2
	//Setup
	field[256] currentDigest = leafDigest
	
	//Loop up the tree
	preimage = multiplex(directionSelector, currentDigest, pathDigest0)
	field[256] lhs = preimage[0..256]
	field[256] rhs = preimage[256..512]
	currentDigest = sha256(lhs, rhs)

	//preimage = multiplex(directionSelector[1], currentDigest, PathDigest1)
	//currentDigest = hash(preimage)

	//preimage = multiplex(directionSelector[2], currentDigest, PathDigest2)
	//currentDigest = hash(preimage)

	rootDigest == currentDigest
	
	return 1 //currentDigest //return true in success  