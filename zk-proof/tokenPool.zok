import "ecc/babyjubjubParams" as context
import "ecc/proofOfOwnership" as proofOfOwnership
import "hashes/sha256/512bitPadded" as sha256
import "utils/pack/nonStrictUnpack256" as unpack256
import "utils/pack/unpack128" as unpack128
import "utils/pack/pack256" as pack256
import "hashes/utils/256bitsDirectionHelper" as multiplex


def combine256(field[2] values) -> (field[256]):
	a = unpack128(values[0])
	b = unpack128(values[1])
	return [...a, ...b]

def main(field[2] rootDigest, private field[2] pk, private field sk, private field[1] directionSelector, private field[2] leafDigest, private field[2] pathDigest0) -> (field):

	context = context()
	1 == proofOfOwnership(pk, sk, context)

	lhs = unpack256(pk[0])
	rhs = unpack256(pk[1])
	leafHash = sha256(lhs, rhs)
	leafHash == combine256(leafDigest)
	pathHash0 = combine256(pathDigest0)

	field[256] currentDigest = leafHash

	preimage = multiplex(directionSelector[0], currentDigest, pathHash0)
	lhs = preimage[0..256]
	rhs = preimage[256..512]
	currentDigest = sha256(lhs, rhs)


	treeRoot = combine256(rootDigest)
	treeRoot == currentDigest

	return 1
